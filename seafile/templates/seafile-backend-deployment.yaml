apiVersion: apps/v1
kind: Deployment
metadata:
  name: seafile-backend
spec:
  replicas: {{ .Values.seafileConfig.replicaCountBackend }}
  selector:
    matchLabels:
      app: seafile-backend
  template:
    metadata:
      labels:
        app: seafile-backend
    spec:
      containers:
        - name: seafile-backend
          image: {{ .Values.image.repository }}:{{ .Chart.AppVersion }}
          env:
            - name: DB_HOST
              {{- /* index is necessary since the key contains dashes */ -}}
              {{- if index .Values "mariadb-galera" "enabled"}}
              value: {{ printf "%s-mariadb-galera" .Release.Name | quote }}
              {{- else}}
              value: {{ .Values.seafileConfig.mariadb.host | quote }}
              {{- end }}
            - name: DB_USER
              value: {{ default "root" .Values.seafileConfig.mariadb.user | quote }}
            - name: DB_PORT
              value: {{ default "3306" .Values.seafileConfig.mariadb.port | quote }}
            - name: DB_ROOT_PASSWD
              value: {{ .Values.seafileConfig.mariadb.pass | quote }}
            - name: TIME_ZONE
              value: {{ default "Europe/Berlin" .Values.timezone | quote }}
            - name: SEAFILE_ADMIN_EMAIL
              value: {{ .Values.seafileConfig.initialAdminUser | quote }}
            - name: SEAFILE_ADMIN_PASSWORD
              value: {{ .Values.seafileConfig.initialAdminPass | quote }}
            - name: SEAFILE_SERVER_LETSENCRYPT
              value: "false"
            - name: SEAFILE_SERVER_HOSTNAME
              value: {{ .Values.seafileConfig.hostname | quote }}
            - name: SEAFILE__notification__jwt_private_key
              value: {{ .Values.seafileConfig.seafile.notification.jwtPrivateKey | quote }}
            - name: SEAHUB__SECRET_KEY
              value: {{ .Values.seafileConfig.seahub.secretKey | quote }}
            - name: FORCE_HTTPS_IN_CONF
              value: "true"
            - name: SEAHUB__CACHE_HOST
              {{- if .Values.memcached.enabled }}
              value: {{ printf "%s-memcached" .Release.Name | quote }}
              {{- else}}
              value: {{ .Values.seafileConfig.memcached.host | quote }}
              {{- end }}
            - name: SEAHUB__CACHE_PORT
              value: {{ default "11211" .Values.seafileConfig.memcached.port | quote }}
            - name: SEAFILE__memcached__memcached_options
              {{- if .Values.memcached.enabled }}
              value: {{ printf "--SERVER=%s-memcached --POOL-MIN=10 --POOL-MAX=100" .Release.Name | quote }}
              {{- else}}
              value: "--SERVER={{ .Values.seafileConfig.memcached.host }} --POOL-MIN=10 --POOL-MAX=100"
              {{- end }}
            {{- if .Values.seafileConfig.useS3Storage }}
            - name: SEAFILE__storage__enable_storage_classes
              value: "true"
            - name: SEAFILE__storage__storage_classes_file
              value: "/opt/seafile/seafile_storage_classes.json"
            {{- end }}
            - name: SEAFEVENTS__INDEX0x20FILES__es_host
              {{- if .Values.elasticsearch.enabled }}
              value: {{ printf "%s-elasticsearch" .Release.Name | quote }}
              {{- else}}
              value: {{ .Values.seafileConfig.elasticsearch.host | quote }}
              {{- end }}
            - name: SEAFEVENTS__INDEX0x20FILES__es_port
              value: {{ default "9200" .Values.seafileConfig.elasticsearch.port | quote }}
            - name: REQUESTS_CA_BUNDLE
              value: "/etc/ssl/certs/ca-certificates.crt"
            - name: "SEAFILE__cluster__enabled"
              value: "true"
            - name: "CLUSTER_SERVER"
              value: "true"
            - name: "CLUSTER_MODE"
              value: "backend"
            {{- if .Values.seafileConfig.extraEnv.backend }}
            {{- range .Values.seafileConfig.extraEnv.backend }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: {{ include "seafile.fullname" . }}-license
              mountPath: /shared/seafile/seafile-license.txt
              subPath: seafile-license.txt
              readOnly: true
            - name: {{ include "seafile.fullname" . }}-storage-classes
              mountPath: /opt/seafile/seafile_storage_classes.json
              subPath: seafile_storage_classes.json
              readOnly: true
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - test -f /opt/seafile/pids/seafile-background-tasks.pid
            initialDelaySeconds: 3
            periodSeconds: 3
      volumes:
        {{- include "seafile.volumes" . | nindent 8 }}
        - name: {{ include "seafile.fullname" . }}-license
          secret:
            secretName: {{ .Values.seafileConfig.licenseSecret }}
            items:
              - key: seafile-license.txt
                path: seafile-license.txt
        - name: {{ include "seafile.fullname" . }}-storage-classes
          configMap:
            name: {{ include "seafile.fullname" . }}-storage-classes
